version: "3.8"

services:
  user_service:
    container_name: user_service
    build:
      context: .
      dockerfile: docker/user_service.Dockerfile
    ports:
      - "8080:8080"
    expose:
      - '8080'
#    volumes:
#      - ./:/app
    restart: always
#    environment:
#      - POSTGRES_HOST=host.docker.internal
#      - POSTGRES_PORT=5432
#      - REDIS_ADDR=host.docker.internal:6379
#      - MONGO_URI=mongodb://host.docker.internal:27017
#      - JAEGER_HOST=host.docker.internal:6831
#      - KAFKA_BROKERS=host.docker.internal:9092
    depends_on:
      - microservices_mysql
      - jaeger
    networks: [ "microservices" ]

  microservices_mysql:
    image: mysql:5.7
    container_name: microservices_mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'go'
      MYSQL_USER: 'go'
      MYSQL_PASSWORD: 'go'
      MYSQL_ROOT_PASSWORD: 'go'
      MAX_ALLOWED_PACKET: '256M'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - data_container:/var/lib/mysql
    hostname: db.local
    networks: [ "microservices" ]

  jaeger:
    container_name: jaeger_container
    restart: always
    image: jaegertracing/all-in-one:1.21
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    hostname: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks: [ "microservices" ]

#volumes:
#  my-db:
volumes:
  data_container:

networks:
  microservices:
    name: microservices
