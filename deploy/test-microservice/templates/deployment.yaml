#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: user-service-deployment
#  labels:
#    app: user-service
#spec:
#  replicas: 3
#  selector:
#    matchLabels:
#      app: user-service
#  template:
#    metadata:
#      labels:
#        app: user-service
#    spec:
#      containers:
#      - name: user-service
#        image: radis
#        #image: reza879/user_service:latest
#        ports:
#        - containerPort: 6379
#
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: nginx-deployment
#  labels:
#    app: nginx
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: nginx
#  template:
#    metadata:
#      labels:
#        app: nginx
#    spec:
#      containers:
#        - name: nginx
#          image: nginx:1.16
#          ports:
#            - containerPort: 8080

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-deployment
  labels:
    app: user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user
  template:
    metadata:
      labels:
        app: user
    spec:
      initContainers:
        - name: init-mydb
          image: busybox:1.28
          command: [ 'sh', '-c', "until nslookup mysql.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mysql; sleep 2; done" ]
      containers:
        - name: user
#          image: nginx:1.16
          image: reza879/user_service:63be60b
          ports:
#            - containerPort: 8080
            - containerPort: 8180
          env:
            - name: DATABASE_HOST
              value: mysql
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user
  ports:
    - protocol: TCP
      port: 8180
      targetPort: 8180
